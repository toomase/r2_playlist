indeks <- 2
# indeks <- df %>%
#   .$n
tryCatch(
{
remDr$navigate(saade)  # lehele navigeerimine
Sys.sleep(2)
# vali soovitud aasta
aasta <- remDr$findElement(using = 'css',
paste(".ng-scope.ng-binding:nth-child(", aasta_2, ")",
sep = ""))
aasta$clickElement()
kokku <- map_df(seq(0, indeks), kraabi_playlist)
# kokku <- map(saade, indeks, kraabi_playlist)
return(kokku)
}, error=function(e) NULL
)
}
system.time({
koos <- map_df(sample(saade, 1), r2_playlist)
})
# Funktsioon playlisti lugude nimekirja kraapimiseks (x = url ja y = playlisti nr)
r2_playlist <- function(df, aasta = 2017){
# aasta indeks 2014-st aastast
aasta_2 <- aasta - 2014 + 1
saade <- df
indeks <- 2
# indeks <- df %>%
#   .$n
tryCatch(
{
remDr$navigate(saade)  # lehele navigeerimine
Sys.sleep(2)
# vali soovitud aasta
aasta <- remDr$findElement(using = 'css',
paste(".ng-scope.ng-binding:nth-child(", aasta_2, ")",
sep = ""))
aasta$clickElement()
kokku <- map_df(seq(0, indeks), kraabi_playlist)
# kokku <- map(saade, indeks, kraabi_playlist)
return(kokku)
}, error=function(e) NULL
)
}
system.time({
koos <- map_df(sample(saade, 1), r2_playlist)
})
# Funktsioon playlisti lugude nimekirja kraapimiseks (x = url ja y = playlisti nr)
r2_playlist <- function(df, ind, aasta = 2017){
# aasta indeks 2014-st aastast
aasta_2 <- aasta - 2014 + 1
saade <- df
indeks <- ind
# indeks <- df %>%
#   .$n
tryCatch(
{
remDr$navigate(saade)  # lehele navigeerimine
Sys.sleep(2)
# vali soovitud aasta
aasta <- remDr$findElement(using = 'css',
paste(".ng-scope.ng-binding:nth-child(", aasta_2, ")",
sep = ""))
aasta$clickElement()
kokku <- map_df(seq(0, indeks), kraabi_playlist)
# kokku <- map(saade, indeks, kraabi_playlist)
return(kokku)
}, error=function(e) NULL
)
}
system.time({
koos <- map_df(sample(saade, 1), 2, r2_playlist)
})
# Funktsioon playlisti lugude nimekirja kraapimiseks (x = url ja y = playlisti nr)
r2_playlist <- function(df, ind, aasta = 2017){
# aasta indeks 2014-st aastast
aasta_2 <- aasta - 2014 + 1
saade <- df
indeks <- ind
# indeks <- df %>%
#   .$n
tryCatch(
{
remDr$navigate(saade)  # lehele navigeerimine
Sys.sleep(2)
# vali soovitud aasta
aasta <- remDr$findElement(using = 'css',
paste(".ng-scope.ng-binding:nth-child(", aasta_2, ")",
sep = ""))
aasta$clickElement()
kokku <- map_df(seq(0, indeks), kraabi_playlist)
# kokku <- map(saade, indeks, kraabi_playlist)
return(kokku)
}, error=function(e) NULL
)
}
system.time({
koos <- map_df(sample(saade, 1), ind = 2, r2_playlist)
})
indeks <- r2_saated_playlistide_kp %>%
count(saade) %>%
.$n
sample(indeks, 2)
system.time({
koos <- map_df(sample(saade, 2), ind = c(2, 3), r2_playlist)
})
koos <- map2_df(sample(saade, 2), ind = c(2, 3), r2_playlist)
koos <- map2_df(sample(saade, 2), ind = c(2, 3), .f = r2_playlist)
koos <- map2_df(sample(saade, 2), c(2, 3), .f = r2_playlist)
View(koos)
kraabi_playlist <- function(x, y){
tryCatch(
{
Sys.sleep(1)
# Kuupäevade valimine playlistide kuvamiseks
option <- remDr$findElement(using = 'xpath',
paste("//*/option[@value = '", y, "']", sep = ""))
# Topelt klikk, et oleks valitud
option$clickElement()
Sys.sleep(1)
# option$clickElement()
doc <- read_html(remDr$getPageSource()[[1]])
# return(doc)
playlist_raw <- doc %>%
html_nodes(".playlistitem .ng-scope .ng-binding") %>%
html_text() %>%
str_trim() %>%
data.frame() %>%
filter(. != "") %>%
mutate(nr = y, url = x) %>%
select(lugu = 1, nr, url)
kp_raw <- doc %>%
html_node(".form-control") %>%
html_text() %>%
str_extract_all(".{1,10}") %>%
data.frame() %>%
select(kp = 1)
nr <- seq(0, nrow(kp_raw) - 1)
kp <- data.frame(nr, kp_raw)
playlist <- playlist_raw %>%
left_join(kp, by = c("nr" = "nr"))
playlist_raw
}, error=function(e) NULL
)
}
# Funktsioon playlisti lugude nimekirja kraapimiseks (x = url ja y = playlisti nr)
r2_playlist <- function(df, ind, aasta = 2017){
# aasta indeks 2014-st aastast
aasta_2 <- aasta - 2014 + 1
saade <- df
indeks <- ind
# indeks <- df %>%
#   .$n
tryCatch(
{
remDr$navigate(saade)  # lehele navigeerimine
Sys.sleep(2)
# vali soovitud aasta
aasta <- remDr$findElement(using = 'css',
paste(".ng-scope.ng-binding:nth-child(", aasta_2, ")",
sep = ""))
aasta$clickElement()
kokku <- map_df(seq(0, indeks), saade, kraabi_playlist)
# kokku <- map(saade, indeks, kraabi_playlist)
return(kokku)
}, error=function(e) NULL
)
}
system.time({
koos <- map2_df(sample(saade, 2), c(2, 3), .f = r2_playlist)
})
# Funktsioon playlisti lugude nimekirja kraapimiseks (x = url ja y = playlisti nr)
r2_playlist <- function(df, ind, aasta = 2017){
# aasta indeks 2014-st aastast
aasta_2 <- aasta - 2014 + 1
saade <- df
indeks <- ind
# indeks <- df %>%
#   .$n
tryCatch(
{
remDr$navigate(saade)  # lehele navigeerimine
Sys.sleep(2)
# vali soovitud aasta
aasta <- remDr$findElement(using = 'css',
paste(".ng-scope.ng-binding:nth-child(", aasta_2, ")",
sep = ""))
aasta$clickElement()
kokku <- map2_df(seq(0, indeks), saade, kraabi_playlist)
# kokku <- map(saade, indeks, kraabi_playlist)
return(kokku)
}, error=function(e) NULL
)
}
system.time({
koos <- map2_df(sample(saade, 2), c(2, 3), .f = r2_playlist)
})
system.time({
koos <- map2_df(sample(saade, 2), c(2, 3), .f = r2_playlist)
})
kraabi_playlist <- function(x){
tryCatch(
{
Sys.sleep(1)
# Kuupäevade valimine playlistide kuvamiseks
option <- remDr$findElement(using = 'xpath',
paste("//*/option[@value = '", y, "']", sep = ""))
# Topelt klikk, et oleks valitud
option$clickElement()
Sys.sleep(1)
# option$clickElement()
doc <- read_html(remDr$getPageSource()[[1]])
# return(doc)
playlist_raw <- doc %>%
html_nodes(".playlistitem .ng-scope .ng-binding") %>%
html_text() %>%
str_trim() %>%
data.frame() %>%
filter(. != "") %>%
mutate(nr = y, url = saade) %>%
select(lugu = 1, nr, url)
kp_raw <- doc %>%
html_node(".form-control") %>%
html_text() %>%
str_extract_all(".{1,10}") %>%
data.frame() %>%
select(kp = 1)
nr <- seq(0, nrow(kp_raw) - 1)
kp <- data.frame(nr, kp_raw)
playlist <- playlist_raw %>%
left_join(kp, by = c("nr" = "nr"))
playlist_raw
}, error=function(e) NULL
)
}
# Funktsioon playlisti lugude nimekirja kraapimiseks (x = url ja y = playlisti nr)
r2_playlist <- function(df, ind, aasta = 2017){
# aasta indeks 2014-st aastast
aasta_2 <- aasta - 2014 + 1
saade <- df
indeks <- ind
# indeks <- df %>%
#   .$n
tryCatch(
{
remDr$navigate(saade)  # lehele navigeerimine
Sys.sleep(2)
# vali soovitud aasta
aasta <- remDr$findElement(using = 'css',
paste(".ng-scope.ng-binding:nth-child(", aasta_2, ")",
sep = ""))
aasta$clickElement()
kokku <- map_df(seq(0, indeks), kraabi_playlist)
# kokku <- map(saade, indeks, kraabi_playlist)
return(kokku)
}, error=function(e) NULL
)
}
system.time({
koos <- map2_df(sample(saade, 2), c(2, 3), .f = r2_playlist)
})
kraabi_playlist <- function(x){
tryCatch(
{
Sys.sleep(1)
# Kuupäevade valimine playlistide kuvamiseks
option <- remDr$findElement(using = 'xpath',
paste("//*/option[@value = '", y, "']", sep = ""))
# Topelt klikk, et oleks valitud
option$clickElement()
Sys.sleep(1)
# option$clickElement()
doc <- read_html(remDr$getPageSource()[[1]])
# return(doc)
playlist_raw <- doc %>%
html_nodes(".playlistitem .ng-scope .ng-binding") %>%
html_text() %>%
str_trim() %>%
data.frame() %>%
filter(. != "") %>%
mutate(nr = y, url = saade2) %>%
select(lugu = 1, nr, url)
kp_raw <- doc %>%
html_node(".form-control") %>%
html_text() %>%
str_extract_all(".{1,10}") %>%
data.frame() %>%
select(kp = 1)
nr <- seq(0, nrow(kp_raw) - 1)
kp <- data.frame(nr, kp_raw)
playlist <- playlist_raw %>%
left_join(kp, by = c("nr" = "nr"))
playlist_raw
}, error=function(e) NULL
)
}
# Funktsioon playlisti lugude nimekirja kraapimiseks (x = url ja y = playlisti nr)
r2_playlist <- function(df, ind, aasta = 2017){
# aasta indeks 2014-st aastast
aasta_2 <- aasta - 2014 + 1
saade2 <- df
indeks <- ind
# indeks <- df %>%
#   .$n
tryCatch(
{
remDr$navigate(saade2)  # lehele navigeerimine
Sys.sleep(2)
# vali soovitud aasta
aasta <- remDr$findElement(using = 'css',
paste(".ng-scope.ng-binding:nth-child(", aasta_2, ")",
sep = ""))
aasta$clickElement()
kokku <- map_df(seq(0, indeks), kraabi_playlist)
# kokku <- map(saade, indeks, kraabi_playlist)
return(kokku)
}, error=function(e) NULL
)
}
system.time({
koos <- map2_df(sample(saade, 2), c(2, 3), .f = r2_playlist)
})
kraabi_playlist <- function(x){
tryCatch(
{
Sys.sleep(1)
# Kuupäevade valimine playlistide kuvamiseks
option <- remDr$findElement(using = 'xpath',
paste("//*/option[@value = '", y, "']", sep = ""))
# Topelt klikk, et oleks valitud
option$clickElement()
Sys.sleep(1)
# option$clickElement()
doc <- read_html(remDr$getPageSource()[[1]])
# return(doc)
playlist_raw <- doc %>%
html_nodes(".playlistitem .ng-scope .ng-binding") %>%
html_text() %>%
str_trim() %>%
data.frame() %>%
filter(. != "") %>%
mutate(nr = y, url = x) %>%
select(lugu = 1, nr, url)
kp_raw <- doc %>%
html_node(".form-control") %>%
html_text() %>%
str_extract_all(".{1,10}") %>%
data.frame() %>%
select(kp = 1)
nr <- seq(0, nrow(kp_raw) - 1)
kp <- data.frame(nr, kp_raw)
playlist <- playlist_raw %>%
left_join(kp, by = c("nr" = "nr"))
playlist_raw
}, error=function(e) NULL
)
}
# Funktsioon playlisti lugude nimekirja kraapimiseks (x = url ja y = playlisti nr)
r2_playlist <- function(df, ind, aasta = 2017){
# aasta indeks 2014-st aastast
aasta_2 <- aasta - 2014 + 1
saade2 <- df
indeks <- ind
# indeks <- df %>%
#   .$n
tryCatch(
{
remDr$navigate(saade2)  # lehele navigeerimine
Sys.sleep(2)
# vali soovitud aasta
aasta <- remDr$findElement(using = 'css',
paste(".ng-scope.ng-binding:nth-child(", aasta_2, ")",
sep = ""))
aasta$clickElement()
kokku <- map_df(seq(0, indeks), kraabi_playlist)
# kokku <- map(saade, indeks, kraabi_playlist)
return(kokku)
}, error=function(e) NULL
)
}
system.time({
koos <- map2_df(sample(saade, 2), c(2, 3), .f = r2_playlist)
})
kraabi_playlist <- function(y, x){
tryCatch(
{
Sys.sleep(1)
# Kuupäevade valimine playlistide kuvamiseks
option <- remDr$findElement(using = 'xpath',
paste("//*/option[@value = '", y, "']", sep = ""))
# Topelt klikk, et oleks valitud
option$clickElement()
Sys.sleep(1)
# option$clickElement()
doc <- read_html(remDr$getPageSource()[[1]])
# return(doc)
playlist_raw <- doc %>%
html_nodes(".playlistitem .ng-scope .ng-binding") %>%
html_text() %>%
str_trim() %>%
data.frame() %>%
filter(. != "") %>%
mutate(nr = y, url = x) %>%
select(lugu = 1, nr, url)
kp_raw <- doc %>%
html_node(".form-control") %>%
html_text() %>%
str_extract_all(".{1,10}") %>%
data.frame() %>%
select(kp = 1)
nr <- seq(0, nrow(kp_raw) - 1)
kp <- data.frame(nr, kp_raw)
playlist <- playlist_raw %>%
left_join(kp, by = c("nr" = "nr"))
playlist_raw
}, error=function(e) NULL
)
}
# Funktsioon playlisti lugude nimekirja kraapimiseks (x = url ja y = playlisti nr)
r2_playlist <- function(df, ind, aasta = 2017){
# aasta indeks 2014-st aastast
aasta_2 <- aasta - 2014 + 1
saade2 <- df
indeks <- ind
# indeks <- df %>%
#   .$n
tryCatch(
{
remDr$navigate(saade2)  # lehele navigeerimine
Sys.sleep(2)
# vali soovitud aasta
aasta <- remDr$findElement(using = 'css',
paste(".ng-scope.ng-binding:nth-child(", aasta_2, ")",
sep = ""))
aasta$clickElement()
kokku <- map_df(seq(0, indeks), saade2, kraabi_playlist)
# kokku <- map(saade, indeks, kraabi_playlist)
return(kokku)
}, error=function(e) NULL
)
}
system.time({
koos <- map2_df(sample(saade, 2), c(2, 3), .f = r2_playlist)
})
rm(x)
rm(y)
kraabi_playlist <- function(y, x){
tryCatch(
{
Sys.sleep(1)
# Kuupäevade valimine playlistide kuvamiseks
option <- remDr$findElement(using = 'xpath',
paste("//*/option[@value = '", y, "']", sep = ""))
# Topelt klikk, et oleks valitud
option$clickElement()
Sys.sleep(1)
# option$clickElement()
doc <- read_html(remDr$getPageSource()[[1]])
# return(doc)
playlist_raw <- doc %>%
html_nodes(".playlistitem .ng-scope .ng-binding") %>%
html_text() %>%
str_trim() %>%
data.frame() %>%
filter(. != "") %>%
mutate(nr = y, url = x) %>%
select(lugu = 1, nr, url)
kp_raw <- doc %>%
html_node(".form-control") %>%
html_text() %>%
str_extract_all(".{1,10}") %>%
data.frame() %>%
select(kp = 1)
nr <- seq(0, nrow(kp_raw) - 1)
kp <- data.frame(nr, kp_raw)
playlist <- playlist_raw %>%
left_join(kp, by = c("nr" = "nr"))
playlist_raw
}, error=function(e) NULL
)
}
# Funktsioon playlisti lugude nimekirja kraapimiseks (x = url ja y = playlisti nr)
r2_playlist <- function(df, ind, aasta = 2017){
# aasta indeks 2014-st aastast
aasta_2 <- aasta - 2014 + 1
saade2 <- df
indeks <- ind
# indeks <- df %>%
#   .$n
tryCatch(
{
remDr$navigate(saade2)  # lehele navigeerimine
Sys.sleep(2)
# vali soovitud aasta
aasta <- remDr$findElement(using = 'css',
paste(".ng-scope.ng-binding:nth-child(", aasta_2, ")",
sep = ""))
aasta$clickElement()
kokku <- map2_df(seq(0, indeks), saade2, kraabi_playlist)
# kokku <- map(saade, indeks, kraabi_playlist)
return(kokku)
}, error=function(e) NULL
)
}
system.time({
koos <- map2_df(sample(saade, 2), c(2, 3), .f = r2_playlist)
})
View(koos)
system.time({
koos <- map2_df(sample(saade, 2), c(2, 3), .f = r2_playlist, 2016)
})
View(koos)
